services:
  app-prod:
    profiles:
      - prod
      - app-prod
    build:
      context: .
      args:
        BUILD_ENV: prod
    networks:
      - public
      - internal-prod
    ports:
      - "8080:8080"
    env_file:
      - .env.prod
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
    volumes:
      - data_volume_prod:/app/data
    depends_on:
      db-prod:
        condition: service_healthy
    restart: unless-stopped


  db-prod:
    image: 'postgres:16-alpine'
    profiles:
      - prod
      - db-prod
    networks:
      - internal-prod
    env_file:
      - .env.prod
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    volumes:
      - db_volume_prod:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s


  app-dev:
    build:
      context: .
      args:
        BUILD_ENV: dev
    volumes:
      - data_volume_dev:/app/data
    profiles:
      - dev
      - app-dev
    env_file:
      - .env.dev
    depends_on:
      - localhost
    ports:
      - "8080:8080"


  localhost:
    image: 'postgres:16-alpine'
    profiles:
      - dev
      - db-dev
    env_file:
      - .env.dev
    ports:
      - '5432:5432'
    volumes:
      - db_volume_dev:/var/lib/postgresql/data


volumes:
  db_volume_prod: {}
  db_volume_dev: {}
  data_volume_prod: {}
  data_volume_dev: {}

networks:
  public:
    driver: bridge
  internal-prod:
    driver: bridge
    internal: true
