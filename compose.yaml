services:
  app-prod:
    profiles:
      - prod
      - app-prod

    build:
      context: .
      args:
        BUILD_ENV: prod

    networks:
      - internal-prod

    env_file:
      - .env.prod-ORIGINAL

    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'

    depends_on:
      db-prod:
        condition: service_healthy

    ports:
      - "8080:8080"

    restart: unless-stopped


  db-prod:
    image: 'postgres:16-alpine'
    profiles:
      - prod
      - db-prod

    networks:
      - internal-prod

    env_file:
      - .env.prod-ORIGINAL

    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

    volumes:
      - db_volume_prod:/var/lib/postgresql/data

    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s


  app-dev:
    build:
      context: .
      args:
        BUILD_ENV: dev
    profiles:
      - dev
      - app-dev
    env_file:
      - .env.dev
    depends_on:
      - db-dev
    ports:
      - "8080:8080"


  db-dev:
    image: 'postgres:16-alpine'
    profiles:
      - dev
      - db-dev
    env_file:
      - .env.dev
    ports:
      - '5432:5432'
    volumes:
      - db_volume_dev:/var/lib/postgresql/data

volumes:
  db_volume_prod: {}
  db_volume_dev: {}

networks:
  internal-prod:
    driver: bridge
    internal: true
